*unite-quickfix.txt*	quickfix を unite.vim に出力する unite-source です。


==============================================================================
目次						*unite_quickfix-contents*

概要				|unite_quickfix-introduction|
使い方				|unite-quickfix-usage|
設定				|unite-quickfix-setting|
  unite-quickfix の変数		  |unite-quickfix-variables|
設定例				|unite-quickfix-example|


==============================================================================
概要						*unite_quickfix-introduction*

|unite-quickfix| は |quickfix| (|location-list|) のデータを Shougo 氏が作成された
|unite.vim| へと出力を行うための |unite-sources| です。

unite.vim - github : https://github.com/Shougo/unite.vim


また、同様の処理を行うプラグインとして、sgur 氏が作成された |unite-qf| が既に公
開されております。

unite-qf - github : https://github.com/sgur/unite-qf


|unite-qf| との違いとして、下記のようなものが上げられます。

- is_multiline に対応
 - 1行に収まらなかった場合に内容が短縮されるのではなく、2行目以降に続けて出力が
  行われる
 - |g:unite_quickfix_is_multiline|

- |:colder| と |:cnewer| を使用した履歴の取得
 - |unite-quickfix-usage|

- |pathshorten()| を使用したファイルパスの短縮可能
 - |g:unite_quickfix_filename_is_pathshorten|

- location_list の出力
 - :Unite location_list

- ハイライト
 - see: http://d.hatena.ne.jp/osyo-manga/20130326/1364298157

- 文字コードの変換には未対応


==============================================================================
使い方						*unite-quickfix-usage*

基本的には |quickfix| へ出力を行なってから |unite.vim| を起動させます。

>
	" quickfix の出力
	:Unite quickfix
	
	" location-list の出力
	:Unite location_list
	
	" 2つ前の quickfix を出力
	" この場合、unite.vim の出力が変更されるだけで
	" 実際に:colder は行われないので注意して下さい
	:Unite quickfix:2
	
	" quickfix と同じような挙動
	" 候補を選択しても unite.vim を終了せずに(-no-quit)
	" 一番下に unite.vim を開く(-direction=botright)
	:Unite -no-quit -direction=botright quickfix
<


==============================================================================
設定						*unite-quickfix-setting*


------------------------------------------------------------------------------
unite-quickfix の変数				*unite-quickfix-variables*

g:unite_quickfix_filename_is_pathshorten	*g:unite_quickfix_filename_is_pathshorten*
	表示されるファイル名を短縮するかどうか設定します。

	0 : 短縮しない
	1 : 短縮する

Default: >
	let unite_quickfix_filename_is_pathshorten = 1
<


g:unite_quickfix_is_multiline			*g:unite_quickfix_is_multiline*
	ウィンドウ幅からはみ出た場合に改行して表示するかどうかを設定します。

	0 : 改行しない
	1 : 改行する

Default: >
	let g:unite_quickfix_is_multiline = 1
<

	*g:unite#filters#converter_quickfix_highlight#enable_bold_for_message*
g:unite#filters#converter_quickfix_highlight#enable_bold_for_message
	エラーメッセージを太字にするかどうかを設定します。

	0 : 太字にしない
	1 : 太字にする

Default: >
	let g:unite#filters#converter_quickfix_highlight#enable_bold_for_message = 1
<

------------------------------------------------------------------------------
unite-quickfix のハイライト			*unite-quickfix-highlight*

converter_quickfix_highlight 時に適用されるハイライトです。


UniteQuickFixError		*unite-quickfix-highlight-UniteQuickFixError*
	"error" のハイライトを設定します。
Default: >
	highlight UniteQuickFixError ctermfg=1 guifg=Red term=bold gui=bold
<

UniteQuickFixWarning		*unite-quickfix-highlight-UniteQuickFixWarning*
	"warning" のハイライトを設定します。
Default: >
	highlight UniteQuickFixWarning ctermfg=1 guifg=Purple
<


==============================================================================
設定例						*unite-quickfix-example*

ハイライトする				*unite-quickfix-example-highlight*
ハイライト機能を使用する場合は unite-filters で設定します。
また、この機能は -multi-line では使用できず、-wrap を設定する必要があります。

Example: >
	" multi-line を無効にする
	let g:unite_quickfix_is_multiline=0
	
	" コンバータに converter_quickfix_highlight を設定
	call unite#custom_source('quickfix', 'converters', 'converter_quickfix_highlight')
	call unite#custom_source('location_list', 'converters', 'converter_quickfix_highlight')

	" -wrap を付けて使用しなければうまくハイライトが行われない
	:Unite quickfix -wrap
<


==============================================================================
vim:tw=78:fo=tcq2mM:ts=8:ft=help:norl
